name: Build Android APK

on:
  workflow_dispatch:
    inputs:
      build_name:
        description: 'App版本名，如 1.0.0'
        required: true
        default: '1.0.0'
      build_number:
        description: '构建号（每次发布递增），如 1'
        required: true
        default: '1'
      release_type:
        description: '发布类型'
        type: choice
        options:
          - release
          - beta
          - debug
        default: release

jobs:
  build:
    name: Build APK for Android
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: true  # 如果 nebula 是子模块，请确保拉取

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: "zulu"
          java-version: "17"

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.29.2"
          channel: "stable"

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'

      - name: Generate Go bindings (mobileNebula.aar)
        run: |
          # ✅ 正确方式：在脚本内部扩展 $PATH
          export PATH="/home/runner/go/bin:/opt/hostedtoolcache/go/1.22.12/x64/bin:$PATH"
      
          # 创建 env.sh（供 gen-artifacts.sh 使用）
          cat <<'EOF' > env.sh
          #!/bin/sh
          export GOPATH="$PWD/go"
          export PATH="$GOPATH/bin:$PATH"
          EOF
      
          # 创建 GOPATH 目录
          mkdir -p go
      
          # 确保脚本可执行
          chmod +x gen-artifacts.sh
      
          # 运行生成脚本
          ./gen-artifacts.sh android

      - name: Install dependencies
        run: flutter pub get

      - name: Set build name and number from input
        run: |
          echo "BUILD_NAME=${{ inputs.build_name }}" >> $GITHUB_ENV
          echo "BUILD_NUMBER=${{ inputs.build_number }}" >> $GITHUB_ENV

      - name: Set keystore path
        run: |
          echo "GOOGLE_PLAY_KEYSTORE_PATH=$RUNNER_TEMP/upload-keystore.jks" >> $GITHUB_ENV

      - name: Restore keystore from base64
        env:
          KEYSTORE_BASE64: ${{ secrets.GOOGLE_PLAY_KEYSTORE_BASE64 }}
        run: |
          echo "$KEYSTORE_BASE64" | base64 -d > "$GOOGLE_PLAY_KEYSTORE_PATH"

      - name: Build Release APK
        run: |
          flutter build apk \
            --release \
            --build-name=$BUILD_NAME \
            --build-number=$BUILD_NUMBER

      - name: Upload APK as artifact
        uses: actions/upload-artifact@v4
        with:
          name: MobileNebula-APK
          path: build/app/outputs/flutter-apk/app-release.apk
