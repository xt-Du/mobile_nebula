name: Build APK Only

on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+-*"  # 触发条件保持不变

jobs:
  build:
    name: Build Android APK
    runs-on: macos-15  # 也可以改为 ubuntu-latest（更便宜/更快），除非你同时需要 iOS

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: "zulu"
          java-version: "17"

      - name: Install Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.29.2"

      - name: Setup bundletool
        uses: amyu/setup-bundletool@v1

      # 如果你不使用 Go 或 iOS 构建，可以删除以下几项
      # - name: Set up Go 1.22
      #   uses: actions/setup-go@v5
      #   with:
      #     go-version: "1.22"

      # - name: Install google play keystore
      #   env:
      #     GOOGLE_PLAY_KEYSTORE_BASE64: ${{ secrets.GOOGLE_PLAY_KEYSTORE_BASE64 }}
      #   run: |
      #     GOOGLE_PLAY_KEYSTORE_PATH="$RUNNER_TEMP/gp_signing.jks"
      #     echo "GOOGLE_PLAY_KEYSTORE_PATH=$GOOGLE_PLAY_KEYSTORE_PATH" >> $GITHUB_ENV
      #     echo -n "$GOOGLE_PLAY_KEYSTORE_BASE64" | base64 --decode --output "$GOOGLE_PLAY_KEYSTORE_PATH"

      # 只保留必要的环境变量
      - name: Get build name and number
        run: |
          flutter pub get
          touch env.sh

          # 提取版本号
          BUILD_NAME="${GITHUB_REF#refs/tags/v}"
          BUILD_NAME="${BUILD_NAME%-*}"
          echo "BUILD_NAME=$BUILD_NAME" >> $GITHUB_ENV
          echo "BUILD_NUMBER=1" >> $GITHUB_ENV  # 简单起见设为 1，或从文件读取

      - name: Build Android App Bundle
        run: flutter build appbundle --build-number="$BUILD_NUMBER" --build-name="$BUILD_NAME"

      - name: Generate Universal APK from AAB
        env:
          GOOGLE_PLAY_KEYSTORE_PASSWORD: ${{ secrets.GOOGLE_PLAY_KEYSTORE_PASSWORD }}
        run: |
          bundletool build-apks \
            --bundle=build/app/outputs/bundle/release/app-release.aab \
            --output=build/app/outputs/apk/release/MobileNebula.apks \
            --mode=universal \
            --ks=$GOOGLE_PLAY_KEYSTORE_PATH \
            --ks-key-alias=key \
            --ks-pass=pass:$GOOGLE_PLAY_KEYSTORE_PASSWORD
          unzip -p build/app/outputs/apk/release/MobileNebula.apks universal.apk > build/app/outputs/apk/release/MobileNebula.apk

      - name: Rename output files
        run: |
          mv build/app/outputs/bundle/release/app-release.aab build/app/outputs/bundle/release/MobileNebula.aab

      # 👇 上传为 GitHub Release（推荐，方便分享）
      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          name: Release ${{ env.BUILD_NAME }}
          draft: false
          prerelease: false
          token: ${{ secrets.GITHUB_TOKEN }}
          files: |
            build/app/outputs/apk/release/MobileNebula.apk
            build/app/outputs/bundle/release/MobileNebula.aab

      # ✅ 或者：仅作为构建产物（Artifact）保留（适合测试）
      # - name: Upload APK as Artifact
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: android-apk
      #     path: |
      #       build/app/outputs/apk/release/MobileNebula.apk
      #       build/app/outputs/bundle/release/MobileNebula.aab
